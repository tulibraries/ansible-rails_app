---

- name: Check if the schema_migrations table exists
  community.postgresql.postgresql_query:
    db: "{{ rails_app_db }}"
    query: "SELECT to_regclass('public.schema_migrations');"
  register: pgq
  become: true
  become_user: postgres
  delegate_to: "{{ rails_app_db_machine | default(omit, true) }}"
  changed_when: pgq.query_result[0]['to_regclass'] is none
  tags:
    - rails_app
    - db

- name: Setup the PostgreSQL DB the first time this runs
  ansible.builtin.command: >
    bash -lc 'RAILS_ENV={{ rails_app_env }} DISABLE_DATABASE_ENVIRONMENT_CHECK=1 bundle exec rails db:schema:load'
  args:
    chdir: "{{ rails_app_install_path }}"
  become: true
  become_user: "{{ rails_app_user }}"
  register: db_schema_load_result
  changed_when: "'Schema loaded' in db_schema_load_result.stdout or 'created' in db_schema_load_result.stdout"
  when: rails_app_using_postgres and pgq.query_result[0]['to_regclass'] is none
  tags:
    - rails_app
    - db
